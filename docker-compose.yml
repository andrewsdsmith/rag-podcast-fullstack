services:
  db:
    image: pgvector/pgvector:pg16
    container_name: fullstack-rag-pgvector-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: zoe-vector-db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: "no"
    networks:
      - rag-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: fullstack-rag-backend
    depends_on:
      db:
        condition: service_healthy
    restart: "no"
    ports:
      - "8000:8000"
    build:
      context: ./backend
    command:
      - fastapi
      - run
      - --reload
      - "app/main.py"
    environment:
      - environment=local
      - PROJECT_NAME=Full Stack RAG Podcast QA
      - OPENAI_API_KEY=sk-
      - OPENAI_MODEL=gpt-4
      - HF_EMBEDDING_MODEL=jinaai/jina-embeddings-v3
      - HF_EMBEDDER_AUTH_TOKEN=hf_
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=zoe-vector-db
    networks:
      - rag-network
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /app
          ignore:
            - ./backend/.venv
            - .venv
        - path: ./backend/pyproject.toml
          action: rebuild

  frontend:
    container_name: fullstack-rag-frontend
    depends_on:
      - backend
    build:
      context: ./frontend
    ports:
      - "4200:80" # 4200 for local dev, 80 on container
    networks:
      - rag-network

volumes:
  pgdata:
    driver: local

networks:
  rag-network:
    name: rag-network
    driver: bridge

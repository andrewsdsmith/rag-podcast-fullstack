name: Main Workflow

on:
  push:
    branches:
      - chore/aws-actions-deploy
    tags:
      - "v*-dev"
      - "v*-prod"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production
      run_build:
        description: "Run build step"
        required: true
        default: true
        type: boolean
      run_deploy:
        description: "Run deploy step"
        required: true
        default: true
        type: boolean

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.ENVIRONMENT }}
      ec2_instance_id: ${{ steps.set-env.outputs.EC2_INSTANCE_ID }}
    steps:
      - name: Set environment variables
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "ENVIRONMENT=${{ inputs.environment }}" >> $GITHUB_OUTPUT
            if [[ "${{ inputs.environment }}" == "production" ]]; then
              echo "EC2_INSTANCE_ID=${{ secrets.PROD_EC2_INSTANCE_ID }}" >> $GITHUB_OUTPUT
            else
              echo "EC2_INSTANCE_ID=${{ secrets.DEV_EC2_INSTANCE_ID }}" >> $GITHUB_OUTPUT
            fi
          else
            TAG=${GITHUB_REF#refs/tags/}
            if [[ $TAG == *-prod ]]; then
              echo "ENVIRONMENT=production" >> $GITHUB_OUTPUT
              echo "EC2_INSTANCE_ID=${{ secrets.PROD_EC2_INSTANCE_ID }}" >> $GITHUB_OUTPUT
            else
              echo "ENVIRONMENT=staging" >> $GITHUB_OUTPUT
              echo "EC2_INSTANCE_ID=${{ secrets.DEV_EC2_INSTANCE_ID }}" >> $GITHUB_OUTPUT
            fi
          fi

  build:
    needs: set-environment
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.run_build }}
    uses: ./.github/workflows/build.yml
    with:
      environment: ${{ needs.set-environment.outputs.environment }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy:
    needs: [set-environment, build]
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.run_deploy }}
    uses: ./.github/workflows/deploy.yml
    with:
      environment: ${{ needs.set-environment.outputs.environment }}
      ec2_instance_id: ${{ needs.set-environment.outputs.ec2_instance_id }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
      HF_EMBEDDING_MODEL: ${{ secrets.HF_EMBEDDING_MODEL }}
      HF_EMBEDDER_AUTH_TOKEN: ${{ secrets.HF_EMBEDDER_AUTH_TOKEN }}
